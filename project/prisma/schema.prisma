generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Jackets {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  mainImage   String? @default("")
  colors      Color[]
  images      Image[]
}

model Shirts {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  mainImage   String? @default("")
  colors      Color[]
  images      Image[]
}

model Tops {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  mainImage   String? @default("")
  colors      Color[]
  images      Image[]
}

model SweatShirts {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  mainImage   String? @default("")
  colors      Color[]
  images      Image[]
}

model Pants {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  mainImage   String? @default("")
  colors      Color[]
  images      Image[]
}

model Accessories {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  mainImage   String? @default("")
  colors      Color[]
  images      Image[]
}

model Shoes {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  mainImage   String? @default("")
  colors      Color[]
  images      Image[]
}

model Color {
  id            Int          @id @default(autoincrement())
  color         String
  colorImage    String
  jacket        Jackets?     @relation(fields: [jacketId], references: [id])
  jacketId      Int?
  shirt         Shirts?      @relation(fields: [shirtId], references: [id])
  shirtId       Int?
  tops          Tops?        @relation(fields: [topsId], references: [id])
  topsId        Int?
  sweatshirts   SweatShirts? @relation(fields: [sweatshirtsId], references: [id])
  sweatshirtsId Int?
  pants         Pants?       @relation(fields: [pantsId], references: [id])
  pantsId       Int?
  accessories   Accessories? @relation(fields: [accessoriesId], references: [id])
  accessoriesId Int?
  shoes         Shoes?       @relation(fields: [shoesId], references: [id])
  shoesId       Int?
}

model Image {
  id            Int          @id @default(autoincrement())
  image1        String?      @default("")
  image2        String?      @default("")
  image3        String?      @default("")
  image4        String?      @default("")
  jacket        Jackets?     @relation(fields: [jacketId], references: [id])
  jacketId      Int?
  shirt         Shirts?      @relation(fields: [shirtId], references: [id])
  shirtId       Int?
  tops          Tops?        @relation(fields: [topsId], references: [id])
  topsId        Int?
  SweatShirts   SweatShirts? @relation(fields: [sweatShirtsId], references: [id])
  sweatShirtsId Int?
  Pants         Pants?       @relation(fields: [pantsId], references: [id])
  pantsId       Int?
  Accessories   Accessories? @relation(fields: [accessoriesId], references: [id])
  accessoriesId Int?
  Shoes         Shoes?       @relation(fields: [shoesId], references: [id])
  shoesId       Int?
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  cart     Cart?
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique
  cartItems CartItem[]
}

model CartItem {
  id           Int     @id @default(autoincrement())
  cartId       Int
  productName  String
  productPrice Float
  productImage String?
  quantity     Int
  cart         Cart    @relation(fields: [cartId], references: [id])
}
